{"ast":null,"code":"import _slicedToArray from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/armish/University/Semester-8/FYP-2/Delance-app/src/Components/chat/Store.jsx\";\nimport React, { createContext, useReducer } from 'react';\nimport io from 'socket.io-client';\nexport var CTX = createContext();\nvar initState = {\n  General: [{\n    from: localStorage.getItem(\"ownerAddress\"),\n    msg: 'Hello',\n    topic: 'General'\n  }],\n  Topic2: [{\n    from: 'Max',\n    msg: 'Salut',\n    topic: 'Topic2'\n  }, {\n    from: 'Arnold',\n    msg: 'Schwartzenegger',\n    topic: 'Topic2'\n  }, {\n    from: 'Titeuf',\n    msg: 'Yo',\n    topic: 'Topic2'\n  }]\n};\nvar socket;\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\nfunction reducer(state, action) {\n  var _action$payload = action.payload,\n    from = _action$payload.from,\n    msg = _action$payload.msg,\n    topic = _action$payload.topic;\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return _objectSpread({}, state, _defineProperty({}, topic, [].concat(_toConsumableArray(state[topic]), [{\n        from: from,\n        msg: msg\n      }])));\n    default:\n      return state;\n  }\n}\nexport default function Store(props) {\n  var _useReducer = useReducer(reducer, initState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    allChats = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      dispatch({\n        type: \"RECEIVE_MESSAGE\",\n        payload: msg\n      });\n    });\n  }\n  var user = 'FL 0x8f995682Abaa322d0653178B93EC1AC69Ae398E7';\n  return /*#__PURE__*/React.createElement(CTX.Provider, {\n    value: {\n      allChats: allChats,\n      sendChatAction: sendChatAction,\n      user: user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"names":["React","createContext","useReducer","io","CTX","initState","General","from","localStorage","getItem","msg","topic","Topic2","socket","sendChatAction","value","emit","reducer","state","action","payload","type","Store","props","allChats","dispatch","on","user","children"],"sources":["/home/armish/University/Semester-8/FYP-2/Delance-app/src/Components/chat/Store.jsx"],"sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport io from 'socket.io-client'\n\nexport const CTX = createContext()\nconst initState = {\n    General: [\n        { from: localStorage.getItem(\"ownerAddress\"), msg: 'Hello', topic: 'General' }\n    ],\n    Topic2: [\n        { from: 'Max', msg: 'Salut', topic: 'Topic2' },\n        { from: 'Arnold', msg: 'Schwartzenegger', topic: 'Topic2' },\n        { from: 'Titeuf', msg: 'Yo', topic: 'Topic2' }\n    ]\n}\n\nlet socket\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value)\n}\n\nfunction reducer(state, action) {\n    const { from, msg, topic } = action.payload\n    switch (action.type) {\n        case 'RECEIVE_MESSAGE':\n            return {\n                ...state,\n                [topic]: [\n                    ...state[topic],\n                    { from, msg }\n                ]\n            }\n        default:\n            return state\n    }\n}\n\nexport default function Store(props) {\n    const [allChats, dispatch] = useReducer(reducer, initState)\n\n    if (!socket) {\n        socket = io(':3001')\n        socket.on('chat message', (msg) => {\n            dispatch({ type: \"RECEIVE_MESSAGE\", payload: msg })\n        })\n    }\n\n    const user = 'FL 0x8f995682Abaa322d0653178B93EC1AC69Ae398E7';\n\n    return (\n        <CTX.Provider value={{ allChats, sendChatAction, user }}>\n            {props.children}\n        </CTX.Provider>\n    )\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,OAAO,IAAMC,GAAG,GAAGH,aAAa,EAAE;AAClC,IAAMI,SAAS,GAAG;EACdC,OAAO,EAAE,CACL;IAAEC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAU,CAAC,CACjF;EACDC,MAAM,EAAE,CACJ;IAAEL,IAAI,EAAE,KAAK;IAAEG,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAS,CAAC,EAC9C;IAAEJ,IAAI,EAAE,QAAQ;IAAEG,GAAG,EAAE,iBAAiB;IAAEC,KAAK,EAAE;EAAS,CAAC,EAC3D;IAAEJ,IAAI,EAAE,QAAQ;IAAEG,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAS,CAAC;AAEtD,CAAC;AAED,IAAIE,MAAM;AAEV,SAASC,cAAc,CAACC,KAAK,EAAE;EAC3BF,MAAM,CAACG,IAAI,CAAC,cAAc,EAAED,KAAK,CAAC;AACtC;AAEA,SAASE,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;EAAA,sBACCA,MAAM,CAACC,OAAO;IAAnCb,IAAI,mBAAJA,IAAI;IAAEG,GAAG,mBAAHA,GAAG;IAAEC,KAAK,mBAALA,KAAK;EACxB,QAAQQ,MAAM,CAACE,IAAI;IACf,KAAK,iBAAiB;MAClB,yBACOH,KAAK,sBACPP,KAAK,+BACCO,KAAK,CAACP,KAAK,CAAC,IACf;QAAEJ,IAAI,EAAJA,IAAI;QAAEG,GAAG,EAAHA;MAAI,CAAC;IAGzB;MACI,OAAOQ,KAAK;EAAA;AAExB;AAEA,eAAe,SAASI,KAAK,CAACC,KAAK,EAAE;EAAA,kBACJrB,UAAU,CAACe,OAAO,EAAEZ,SAAS,CAAC;IAAA;IAApDmB,QAAQ;IAAEC,QAAQ;EAEzB,IAAI,CAACZ,MAAM,EAAE;IACTA,MAAM,GAAGV,EAAE,CAAC,OAAO,CAAC;IACpBU,MAAM,CAACa,EAAE,CAAC,cAAc,EAAE,UAAChB,GAAG,EAAK;MAC/Be,QAAQ,CAAC;QAAEJ,IAAI,EAAE,iBAAiB;QAAED,OAAO,EAAEV;MAAI,CAAC,CAAC;IACvD,CAAC,CAAC;EACN;EAEA,IAAMiB,IAAI,GAAG,+CAA+C;EAE5D,oBACI,oBAAC,GAAG,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEH,QAAQ,EAARA,QAAQ;MAAEV,cAAc,EAAdA,cAAc;MAAEa,IAAI,EAAJA;IAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnDJ,KAAK,CAACK,QAAQ,CACJ;AAEvB"},"metadata":{},"sourceType":"module"}