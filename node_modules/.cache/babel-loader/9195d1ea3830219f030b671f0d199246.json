{"ast":null,"code":"import _toConsumableArray from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/armish/University/Semester-8/FYP-2/Delance-app/src/Components/MyProjects/BidBlockchain.jsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport \"./myProjects.css\";\nimport swal from \"sweetalert\";\nimport { DELANCE_CONTRACT_ADDRESS, DELANCE_ABI } from \"../abi\";\n// import MyProjects from \"./MyProjects\";\nimport MyProjects from \"./MyProjects\";\n// eslint-disable-next-line no-unused-vars\nimport { ethers } from \"ethers\";\nfunction BidBlockchain1() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    account = _useState2[0],\n    setAccount = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    contract = _useState4[0],\n    setContract = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    projects = _useState6[0],\n    setProjects = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    projectsCount = _useState8[0],\n    setProjectsCount = _useState8[1];\n  var _useState9 = useState({\n      account: \"\",\n      projectsCount: 0,\n      projects: [],\n      delanceContaract: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    contractData = _useState10[0],\n    setContractData = _useState10[1];\n  var initConnection = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var provider, selectedAccount;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // connenting with metamask!\n              provider = window.ethereum;\n              if (typeof provider !== \"undefined\") {\n                provider.request({\n                  method: \"eth_requestAccounts\"\n                }).then(function (accounts) {\n                  selectedAccount = accounts[0];\n                  setAccount(selectedAccount);\n                  // setContractData({ account: selectedAccount });\n                  // console.log(`Selected account is: ${selectedAccount}`);\n                  localStorage.setItem(\"ownerAddress\", contractData.account);\n                }).catch(function (err) {\n                  console.log(err);\n                });\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                  localStorage.removeItem(\"ownerAddress\");\n                  selectedAccount = accounts[0];\n                  localStorage.setItem(\"ownerAddress\", contractData.account);\n                  setAccount(selectedAccount);\n                  // setContractData({ account: selectedAccount });\n                  console.log(\"Account changed to: \".concat(selectedAccount));\n                });\n              } else {\n                swal({\n                  title: \"Provider Undefined!\",\n                  icon: \"fail\"\n                });\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function initConnection() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var delanceContract;\n  var deployContract = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var provider, web3, networkId, _projectsCount, i, _project;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              provider = window.ethereum;\n              web3 = new Web3(provider);\n              _context2.next = 4;\n              return web3.eth.net.getId();\n            case 4:\n              networkId = _context2.sent;\n              if (!DELANCE_CONTRACT_ADDRESS) {\n                _context2.next = 26;\n                break;\n              }\n              delanceContract = new web3.eth.Contract(DELANCE_ABI, DELANCE_CONTRACT_ADDRESS);\n              setContract(delanceContract);\n\n              // setContractData((prevState) => ({\n              //   ...prevState,\n              //   delanceContaract: delanceContract,\n              // }));\n              console.log(\"contract: \", delanceContract);\n              _context2.next = 11;\n              return delanceContract.methods.productCount().call();\n            case 11:\n              _projectsCount = _context2.sent;\n              setContractData(function (prevState) {\n                return _objectSpread({}, prevState, {\n                  projectsCount: _projectsCount\n                });\n              });\n              i = 1;\n            case 14:\n              if (!(i <= _projectsCount)) {\n                _context2.next = 23;\n                break;\n              }\n              _context2.next = 17;\n              return delanceContract.methods.products(i).call();\n            case 17:\n              _project = _context2.sent;\n              _project = Object.values(_project);\n              setContractData({\n                projects: [].concat(_toConsumableArray(contractData.projects), [_project])\n              });\n            case 20:\n              i++;\n              _context2.next = 14;\n              break;\n            case 23:\n              console.log(contractData.projects);\n              _context2.next = 27;\n              break;\n            case 26:\n              swal({\n                title: \"Smart contract not deployed\",\n                text: \"Smart contract not deployed to the current detected network: \".concat(networkId, \"!\"),\n                icon: \"fail\"\n              });\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function deployContract() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addJob = function addJob(_projectTitle, _price) {\n    console.log(\"Hello from addJob: \", contractData.account);\n    console.log(\"Hello from addJob: \", contractData.delanceContaract);\n    delanceContract.methods.createProduct(_projectTitle, _price).send({\n      from: contractData.account\n    }).once(\"receipt\", function (receipt) {\n      swal({\n        title: \"Congratulations!\",\n        text: \"\".concat(_projectTitle, \" bid has been closed.\"),\n        icon: \"success\"\n      });\n    });\n    console.log(\"sender account: \".concat(contractData.account, \".. JOB ADDED!\"));\n\n    // sweet alert!\n  };\n\n  useEffect(function () {\n    initConnection();\n    deployContract();\n  }, []);\n  var completeJob = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(receiverAddr, senderAddr, _amount) {\n      var provider, decimals, input, amount, signer, tx;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              provider = new ethers.providers.Web3Provider(window.ethereum);\n              decimals = 18;\n              input = _amount;\n              if (_amount >= 1) {\n                amount = ethers.BigNumber.from(input).mul(ethers.BigNumber.from(10).pow(decimals));\n              } else {\n                amount = ethers.utils.parseUnits(_amount.toString(), \"ether\");\n              }\n              signer = provider.getSigner();\n              _context3.next = 7;\n              return signer.sendTransaction({\n                to: receiverAddr,\n                value: amount\n              });\n            case 7:\n              tx = _context3.sent;\n              console.log(\"tx: \", tx);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function completeJob(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyProjects, {\n    addJob: addJob,\n    completeJob: completeJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }));\n}\nexport default BidBlockchain1;","map":{"version":3,"names":["React","useState","useEffect","Web3","swal","DELANCE_CONTRACT_ADDRESS","DELANCE_ABI","MyProjects","ethers","BidBlockchain1","account","setAccount","contract","setContract","projects","setProjects","projectsCount","setProjectsCount","delanceContaract","contractData","setContractData","initConnection","provider","window","ethereum","request","method","then","accounts","selectedAccount","localStorage","setItem","catch","err","console","log","on","removeItem","title","icon","delanceContract","deployContract","web3","eth","net","getId","networkId","Contract","methods","productCount","call","_projectsCount","prevState","i","products","_project","Object","values","text","addJob","_projectTitle","_price","createProduct","send","from","once","receipt","completeJob","receiverAddr","senderAddr","_amount","providers","Web3Provider","decimals","input","amount","BigNumber","mul","pow","utils","parseUnits","toString","signer","getSigner","sendTransaction","to","value","tx"],"sources":["/home/armish/University/Semester-8/FYP-2/Delance-app/src/Components/MyProjects/BidBlockchain.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport \"./myProjects.css\";\nimport swal from \"sweetalert\";\nimport { DELANCE_CONTRACT_ADDRESS, DELANCE_ABI } from \"../abi\";\n// import MyProjects from \"./MyProjects\";\nimport MyProjects from \"./MyProjects\";\n// eslint-disable-next-line no-unused-vars\nimport { ethers } from \"ethers\";\n\n\nfunction BidBlockchain1() {\n\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  const [projectsCount, setProjectsCount] = useState(0);\n\n  const [contractData, setContractData] = useState({\n    account: \"\",\n    projectsCount: 0,\n    projects: [],\n    delanceContaract: \"\",\n  });\n\n  const initConnection = async () => {\n    // connenting with metamask!\n    var provider = window.ethereum;\n    let selectedAccount;\n    if (typeof provider !== \"undefined\") {\n      provider.request({ method: \"eth_requestAccounts\" })\n      .then((accounts) => {\n        selectedAccount = accounts[0];\n        setAccount(selectedAccount);\n        // setContractData({ account: selectedAccount });\n        // console.log(`Selected account is: ${selectedAccount}`);\n        localStorage.setItem(\"ownerAddress\", contractData.account);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      window.ethereum.on(\"accountsChanged\", function(accounts) {\n        localStorage.removeItem(\"ownerAddress\");\n        selectedAccount = accounts[0];\n        localStorage.setItem(\"ownerAddress\", contractData.account);\n        setAccount(selectedAccount);\n        // setContractData({ account: selectedAccount });\n        console.log(`Account changed to: ${selectedAccount}`);\n      });\n    } else {\n      swal({\n        title: \"Provider Undefined!\",\n        icon: \"fail\",\n      });\n    }\n\n  }\n  let delanceContract;\n  const deployContract = async () => {\n    var provider = window.ethereum;\n    const web3 = new Web3(provider);\n    const networkId = await web3.eth.net.getId();\n\n    // actual fetching plus posting data on the blockchian!!!\n\n    if (DELANCE_CONTRACT_ADDRESS) {\n      delanceContract = new web3.eth.Contract(\n        DELANCE_ABI,\n        DELANCE_CONTRACT_ADDRESS\n      );\n\n      setContract(delanceContract);\n\n      // setContractData((prevState) => ({\n      //   ...prevState,\n      //   delanceContaract: delanceContract,\n      // }));\n      console.log(\"contract: \", delanceContract);\n\n      const _projectsCount = await delanceContract.methods\n        .productCount()\n        .call();\n      setContractData((prevState) => ({\n        ...prevState,\n        projectsCount: _projectsCount,\n      }));\n\n      for (var i = 1; i <= _projectsCount; i++) {\n        let _project = await delanceContract.methods.products(i).call();\n        _project = Object.values(_project);\n        setContractData({\n          projects: [...contractData.projects, _project],\n        });\n      }\n      console.log(contractData.projects);\n    } else {\n      swal({\n        title: \"Smart contract not deployed\",\n        text: `Smart contract not deployed to the current detected network: ${networkId}!`,\n        icon: \"fail\",\n      });\n    }\n  };\n\n  const addJob = (_projectTitle, _price) => {\n    console.log(\"Hello from addJob: \", contractData.account);\n    console.log(\"Hello from addJob: \", contractData.delanceContaract);\n    delanceContract.methods\n      .createProduct(_projectTitle, _price)\n      .send({ from: contractData.account })\n      .once(\"receipt\", (receipt) => {\n        swal({\n          title: \"Congratulations!\",\n          text: `${_projectTitle} bid has been closed.`,\n          icon: \"success\",\n        });\n      });\n    console.log(`sender account: ${contractData.account}.. JOB ADDED!`);\n\n    // sweet alert!\n  };\n\n  useEffect(() => {\n    initConnection();\n    deployContract();\n  }, []);\n\n  const completeJob = async (receiverAddr, senderAddr, _amount) => {\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const decimals = 18;\n    const input = _amount;\n    let amount;\n    if(_amount >= 1) {\n      amount = ethers.BigNumber.from(input).mul(\n        ethers.BigNumber.from(10).pow(decimals)\n      );\n    } else {\n      amount = ethers.utils.parseUnits(_amount.toString(), \"ether\");\n    }\n    \n\n    const signer = provider.getSigner();\n    const tx = await signer.sendTransaction({\n      to: receiverAddr,\n      value: amount,\n    });\n\n    console.log(\"tx: \", tx);\n  };\n\n\n  return (\n      <div>\n        <MyProjects addJob={addJob} completeJob={completeJob}/>\n      </div>\n  )\n}\n\nexport default BidBlockchain1;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}