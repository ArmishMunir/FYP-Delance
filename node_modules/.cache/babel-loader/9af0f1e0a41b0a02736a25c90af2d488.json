{"ast":null,"code":"import _objectSpread from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/armish/University/Semester-8/FYP-2/Delance-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/armish/University/Semester-8/FYP-2/Delance-app/src/Context.jsx\";\nimport { createContext, useState } from \"react\";\nimport React from \"react\";\nexport default function ContextProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState({\n      email: \"\",\n      metaAccount: \"\",\n      isLoggedin: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userState = _useState2[0],\n    setUserState = _useState2[1];\n  var updateEmail = function updateEmail(email) {\n    setUserState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        email: email,\n        isLoggedin: true\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      userState: userState,\n      updateEmail: updateEmail\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport var Context = createContext();","map":{"version":3,"names":["createContext","useState","React","ContextProvider","children","email","metaAccount","isLoggedin","userState","setUserState","updateEmail","prevState","Context"],"sources":["/home/armish/University/Semester-8/FYP-2/Delance-app/src/Context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport React from \"react\";\n\nexport default function ContextProvider({ children }) {\n  const [userState, setUserState] = useState({\n    email: \"\",\n    metaAccount: \"\",\n    isLoggedin: false,\n  });\n\n  const updateEmail = (email) => {\n    setUserState((prevState) => ({\n      ...prevState,\n      email: email,\n      isLoggedin: true,\n    }));\n  };\n\n  return (\n    <Context.Provider value={{ userState, updateEmail }}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport const Context = createContext();\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,eAAe,OAAe;EAAA,IAAZC,QAAQ,QAARA,QAAQ;EAAA,gBACdH,QAAQ,CAAC;MACzCI,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IAAA;IAJKC,SAAS;IAAEC,YAAY;EAM9B,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIL,KAAK,EAAK;IAC7BI,YAAY,CAAC,UAACE,SAAS;MAAA,yBAClBA,SAAS;QACZN,KAAK,EAAEA,KAAK;QACZE,UAAU,EAAE;MAAI;IAAA,CAChB,CAAC;EACL,CAAC;EAED,oBACE,oBAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEC,SAAS,EAATA,SAAS;MAAEE,WAAW,EAAXA;IAAY,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjDN,QAAQ,CACQ;AAEvB;AAEA,OAAO,IAAMQ,OAAO,GAAGZ,aAAa,EAAE"},"metadata":{},"sourceType":"module"}